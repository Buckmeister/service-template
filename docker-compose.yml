version: "3"
services:
  backend:
    build: backend
    hostname: ${BACKEND_HOST:-backend}
    container_name: ${BACKEND_CONTAINER:-ct_backend}
    networks:
      gateway:
      mongo:
        priority: 100
    depends_on:
      - keycloak
      - mongo
  frontend:
    build: frontend
    hostname: ${FRONTEND_HOST:-frontend}
    container_name: ${FRONTEND_CONTAINER:-ct_frontend}
    networks:
      gateway:
    depends_on:
      - backend
  gateway:
    image: nginx
    container_name: ${GATEWAY_CONTAINER:-ct_gateway}
    networks:
      gateway:
    depends_on:
      - backend
      - frontend
      - keycloak
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf:ro
  keycloak:
    build: keycloak
    hostname: ${KEYCLOAK_HOST:-keycloak}
    container_name: ${KEYCLOAK_CONTAINER:-st_keycloak}
    networks:
      gateway:
      postgres:
        priority: 100
    environment:
      - KEYCLOAK_USER=${KEYCLOAK_USER:-admin}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD:-keycloak}
      - KEYCLOAK_FRONTEND_URL=${KEYCLOAK_FRONTEND_URL:-http://localhost/auth/}
      - DB_USER=${DB_USER:-keycloak}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_ADDR=${DB_ADDR:-postgres}
      - DB_DATABASE=${DB_DATABASE:-keycloak}
      - PROXY_ADDRESS_FORWARDING=true
    depends_on:
      - postgres
  mongo:
    image: mongo
    hostname: ${MONGO_HOST:-mongo}
    container_name: ${MONGO_CONTAINER:-ct_mongo}
    networks:
      mongo:
  postgres:
    image: postgres
    hostname: ${POSTGRES_HOST:-postgres}
    container_name: ${POSTGRES_CONTAINER:-ct_postgres}
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-keycloak}
      - POSTGRES_USER=${POSTGRES_USER:-keycloak}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    networks:
      postgres:
networks:
  gateway:
    name: ${GATEWAY_NETWORK:-nt_gateway}
  postgres:
    name: ${POSTGRES_NETWORK:-nt_postgres}
  mongo:
    name: ${MONGO_NETWORK:-nt_mongo}
